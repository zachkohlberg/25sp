// Populate the sidebar
//
// This is a script, and not included directly in the page, to control the total size of the book.
// The TOC contains an entry for each page, so if each page includes a copy of the TOC,
// the total size of the page becomes O(n**2).
class MDBookSidebarScrollbox extends HTMLElement {
    constructor() {
        super();
    }
    connectedCallback() {
        this.innerHTML = '<ol class="chapter"><li class="chapter-item expanded affix "><a href="intro.html">Introduction</a></li><li class="chapter-item expanded affix "><li class="part-title">Software &amp; Tools</li><li class="chapter-item expanded "><a href="software/setup.html"><strong aria-hidden="true">1.</strong> Setup</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="software/setup/terminal.html"><strong aria-hidden="true">1.1.</strong> Terminal</a></li><li class="chapter-item expanded "><a href="software/setup/text_editor.html"><strong aria-hidden="true">1.2.</strong> Text Editor</a></li><li class="chapter-item expanded "><a href="software/setup/java.html"><strong aria-hidden="true">1.3.</strong> Java</a></li></ol></li><li class="chapter-item expanded "><a href="software/terminal.html"><strong aria-hidden="true">2.</strong> Terminal</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="software/terminal/commands.html"><strong aria-hidden="true">2.1.</strong> Commands</a></li><li class="chapter-item expanded "><a href="software/terminal/navigation.html"><strong aria-hidden="true">2.2.</strong> Navigation</a></li><li class="chapter-item expanded "><a href="software/terminal/files.html"><strong aria-hidden="true">2.3.</strong> Files</a></li></ol></li><li class="chapter-item expanded "><a href="software/text_editor.html"><strong aria-hidden="true">3.</strong> Text Editor</a></li><li class="chapter-item expanded affix "><li class="part-title">General Programming Topics</li><li class="chapter-item expanded "><a href="flowcharts.html"><strong aria-hidden="true">4.</strong> Flowcharts</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="flowcharts/sequential.html"><strong aria-hidden="true">4.1.</strong> Sequential Instructions</a></li><li class="chapter-item expanded "><a href="flowcharts/decisions.html"><strong aria-hidden="true">4.2.</strong> Decision Points</a></li><li class="chapter-item expanded "><div><strong aria-hidden="true">4.3.</strong> Functions</div></li></ol></li><li class="chapter-item expanded "><li class="part-title">Java &amp; Jshell</li><li class="chapter-item expanded "><a href="quickstart.html"><strong aria-hidden="true">5.</strong> Quickstart</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="quickstart/jshell.html"><strong aria-hidden="true">5.1.</strong> Jshell</a></li><li class="chapter-item expanded "><a href="quickstart/output.html"><strong aria-hidden="true">5.2.</strong> Output</a></li><li class="chapter-item expanded "><a href="quickstart/variables.html"><strong aria-hidden="true">5.3.</strong> Variables</a></li><li class="chapter-item expanded "><a href="quickstart/input.html"><strong aria-hidden="true">5.4.</strong> Input</a></li><li class="chapter-item expanded "><a href="quickstart/data_types.html"><strong aria-hidden="true">5.5.</strong> Data Types</a></li><li class="chapter-item expanded "><a href="quickstart/functions.html"><strong aria-hidden="true">5.6.</strong> Functions</a></li><li class="chapter-item expanded "><a href="quickstart/comments.html"><strong aria-hidden="true">5.7.</strong> Comments</a></li></ol></li><li class="chapter-item expanded "><a href="variables.html"><strong aria-hidden="true">6.</strong> Variables</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="variables/creating_variables.html"><strong aria-hidden="true">6.1.</strong> Creating Variables</a></li><li class="chapter-item expanded "><a href="variables/assignment.html"><strong aria-hidden="true">6.2.</strong> Assignment Operator</a></li><li class="chapter-item expanded "><a href="variables/names.html"><strong aria-hidden="true">6.3.</strong> Variable Names</a></li><li class="chapter-item expanded "><a href="variables/paper.html"><strong aria-hidden="true">6.4.</strong> Pen &amp; Paper Analogy</a></li><li class="chapter-item expanded "><a href="variables/scope.html"><strong aria-hidden="true">6.5.</strong> Scope and Shadowing</a></li><li class="chapter-item expanded "><div><strong aria-hidden="true">6.6.</strong> Reference Types</div></li></ol></li><li class="chapter-item expanded "><a href="io.html"><strong aria-hidden="true">7.</strong> I/O</a></li><li><ol class="section"><li class="chapter-item expanded "><div><strong aria-hidden="true">7.1.</strong> Outputting to System.out and System.err</div></li><li class="chapter-item expanded "><a href="io/printf.html"><strong aria-hidden="true">7.2.</strong> Formatting with printf</a></li><li class="chapter-item expanded "><div><strong aria-hidden="true">7.3.</strong> Reading from System.in with a Scanner</div></li><li class="chapter-item expanded "><div><strong aria-hidden="true">7.4.</strong> Redirecting Standard I/O</div></li><li class="chapter-item expanded "><div><strong aria-hidden="true">7.5.</strong> File Input with Scanner</div></li><li class="chapter-item expanded "><div><strong aria-hidden="true">7.6.</strong> File Output with PrintWriter</div></li></ol></li><li class="chapter-item expanded "><a href="types.html"><strong aria-hidden="true">8.</strong> Types</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="types/numeric.html"><strong aria-hidden="true">8.1.</strong> Numeric Types</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="types/numeric/integers.html"><strong aria-hidden="true">8.1.1.</strong> Integers</a></li><li class="chapter-item expanded "><a href="types/numeric/floats.html"><strong aria-hidden="true">8.1.2.</strong> Floating-Point Numbers</a></li><li class="chapter-item expanded "><a href="types/numeric/chars.html"><strong aria-hidden="true">8.1.3.</strong> Chars</a></li><li class="chapter-item expanded "><a href="types/numeric/modulo.html"><strong aria-hidden="true">8.1.4.</strong> Modulo</a></li><li class="chapter-item expanded "><a href="types/numeric/conversions.html"><strong aria-hidden="true">8.1.5.</strong> Numeric Conversions</a></li></ol></li><li class="chapter-item expanded "><a href="types/strings.html"><strong aria-hidden="true">8.2.</strong> Strings</a></li><li class="chapter-item expanded "><a href="types/booleans.html"><strong aria-hidden="true">8.3.</strong> Booleans</a></li><li class="chapter-item expanded "><a href="types/primitives.html"><strong aria-hidden="true">8.4.</strong> Primitive Type Summary</a></li></ol></li><li class="chapter-item expanded "><a href="if.html"><strong aria-hidden="true">9.</strong> If Statements</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="if/if.html"><strong aria-hidden="true">9.1.</strong> If</a></li><li class="chapter-item expanded "><a href="if/comparisons.html"><strong aria-hidden="true">9.2.</strong> Comparisons</a></li><li class="chapter-item expanded "><a href="if/else.html"><strong aria-hidden="true">9.3.</strong> Else</a></li><li class="chapter-item expanded "><a href="if/nested.html"><strong aria-hidden="true">9.4.</strong> Nested Ifs</a></li><li class="chapter-item expanded "><a href="if/else_if.html"><strong aria-hidden="true">9.5.</strong> Else-If</a></li><li class="chapter-item expanded "><a href="if/mistakes.html"><strong aria-hidden="true">9.6.</strong> Mistakes to Avoid</a></li></ol></li><li class="chapter-item expanded "><a href="boolean.html"><strong aria-hidden="true">10.</strong> Boolean Logic</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="boolean/operators.html"><strong aria-hidden="true">10.1.</strong> Boolean Operators</a></li><li class="chapter-item expanded "><a href="boolean/short-circuit.html"><strong aria-hidden="true">10.2.</strong> Short-Circuiting</a></li><li class="chapter-item expanded "><div><strong aria-hidden="true">10.3.</strong> Bitwise Operators</div></li></ol></li><li class="chapter-item expanded "><a href="early_api.html"><strong aria-hidden="true">11.</strong> Early Java API</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="early_api/math.html"><strong aria-hidden="true">11.1.</strong> Math</a></li><li class="chapter-item expanded "><a href="early_api/string.html"><strong aria-hidden="true">11.2.</strong> String</a></li></ol></li><li class="chapter-item expanded "><a href="loops.html"><strong aria-hidden="true">12.</strong> Loops</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="loops/while.html"><strong aria-hidden="true">12.1.</strong> While Loop</a></li><li class="chapter-item expanded "><a href="loops/do.html"><strong aria-hidden="true">12.2.</strong> Do-While Loop</a></li><li class="chapter-item expanded "><a href="loops/counting.html"><strong aria-hidden="true">12.3.</strong> Counting Loop</a></li><li class="chapter-item expanded "><a href="loops/flag.html"><strong aria-hidden="true">12.4.</strong> Flag-Controlled Loop</a></li><li class="chapter-item expanded "><a href="loops/for.html"><strong aria-hidden="true">12.5.</strong> For Loop</a></li><li class="chapter-item expanded "><div><strong aria-hidden="true">12.6.</strong> Nested Loops</div></li></ol></li><li class="chapter-item expanded "><a href="jshell/functions.html"><strong aria-hidden="true">13.</strong> Functions</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="jshell/functions/define.html"><strong aria-hidden="true">13.1.</strong> Defining Functions in Jshell</a></li><li class="chapter-item expanded "><a href="jshell/functions/call.html"><strong aria-hidden="true">13.2.</strong> Calling Functions</a></li></ol></li><li class="chapter-item expanded "><a href="jshell/arrays.html"><strong aria-hidden="true">14.</strong> Arrays</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="jshell/arrays/create.html"><strong aria-hidden="true">14.1.</strong> Creating Arrays</a></li><li class="chapter-item expanded "><a href="jshell/arrays/access.html"><strong aria-hidden="true">14.2.</strong> Accessing and Mutating Arrays</a></li><li class="chapter-item expanded "><a href="jshell/arrays/iteration.html"><strong aria-hidden="true">14.3.</strong> Iterating Over Arrays</a></li><li class="chapter-item expanded "><a href="jshell/arrays/ref_types.html"><strong aria-hidden="true">14.4.</strong> Reference vs Value Types</a></li></ol></li><li class="chapter-item expanded "><a href="java/compiled_intro.html"><strong aria-hidden="true">15.</strong> Jshell to Compiled Java</a></li><li><ol class="section"><li class="chapter-item expanded "><a href="java/compiled_intro/program_structure.html"><strong aria-hidden="true">15.1.</strong> Java Program Structure</a></li><li class="chapter-item expanded "><a href="java/compiled_intro/compilation.html"><strong aria-hidden="true">15.2.</strong> Compile and Run</a></li><li class="chapter-item expanded "><a href="java/compiled_intro/syntax.html"><strong aria-hidden="true">15.3.</strong> Syntax Changes</a></li></ol></li><li class="chapter-item expanded "><a href="templates.html">Syntax Templates and Common Patterns</a></li></ol>';
        // Set the current, active page, and reveal it if it's hidden
        let current_page = document.location.href.toString();
        if (current_page.endsWith("/")) {
            current_page += "index.html";
        }
        var links = Array.prototype.slice.call(this.querySelectorAll("a"));
        var l = links.length;
        for (var i = 0; i < l; ++i) {
            var link = links[i];
            var href = link.getAttribute("href");
            if (href && !href.startsWith("#") && !/^(?:[a-z+]+:)?\/\//.test(href)) {
                link.href = path_to_root + href;
            }
            // The "index" page is supposed to alias the first chapter in the book.
            if (link.href === current_page || (i === 0 && path_to_root === "" && current_page.endsWith("/index.html"))) {
                link.classList.add("active");
                var parent = link.parentElement;
                if (parent && parent.classList.contains("chapter-item")) {
                    parent.classList.add("expanded");
                }
                while (parent) {
                    if (parent.tagName === "LI" && parent.previousElementSibling) {
                        if (parent.previousElementSibling.classList.contains("chapter-item")) {
                            parent.previousElementSibling.classList.add("expanded");
                        }
                    }
                    parent = parent.parentElement;
                }
            }
        }
        // Track and set sidebar scroll position
        this.addEventListener('click', function(e) {
            if (e.target.tagName === 'A') {
                sessionStorage.setItem('sidebar-scroll', this.scrollTop);
            }
        }, { passive: true });
        var sidebarScrollTop = sessionStorage.getItem('sidebar-scroll');
        sessionStorage.removeItem('sidebar-scroll');
        if (sidebarScrollTop) {
            // preserve sidebar scroll position when navigating via links within sidebar
            this.scrollTop = sidebarScrollTop;
        } else {
            // scroll sidebar to current active section when navigating via "next/previous chapter" buttons
            var activeSection = document.querySelector('#sidebar .active');
            if (activeSection) {
                activeSection.scrollIntoView({ block: 'center' });
            }
        }
        // Toggle buttons
        var sidebarAnchorToggles = document.querySelectorAll('#sidebar a.toggle');
        function toggleSection(ev) {
            ev.currentTarget.parentElement.classList.toggle('expanded');
        }
        Array.from(sidebarAnchorToggles).forEach(function (el) {
            el.addEventListener('click', toggleSection);
        });
    }
}
window.customElements.define("mdbook-sidebar-scrollbox", MDBookSidebarScrollbox);
